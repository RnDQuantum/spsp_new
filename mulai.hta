<!DOCTYPE html>
<html>

<head>
    <title>SPSP Launcher</title>
    <meta http-equiv="x-ua-compatible" content="IE=edge">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <HTA:APPLICATION ID="SPSPLauncher" APPLICATIONNAME="SPSP Launcer" BORDER="dialog" BORDERSTYLE="normal" CAPTION="yes"
        MAXIMIZEBUTTON="no" MINIMIZEBUTTON="yes" SHOWINTASKBAR="yes" SINGLEINSTANCE="yes" SYSMENU="yes"
        WINDOWSTATE="normal" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 25px;
        }

        .container {
            background: white;
            border-radius: 20px;
            padding: 35px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            max-width: 550px;
            margin: 0 auto;
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 10px;
            font-size: 28px;
        }

        .subtitle {
            text-align: center;
            color: #6c757d;
            font-size: 13px;
            margin-bottom: 25px;
        }

        .status-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            margin-bottom: 25px;
        }

        .status-card {
            padding: 20px;
            background: #f8f9fa;
            border-radius: 12px;
            text-align: center;
        }

        .status-card.active {
            background: linear-gradient(135deg, #d4fc79 0%, #96e6a1 100%);
        }

        .status-label {
            font-size: 11px;
            color: #6c757d;
            text-transform: uppercase;
            margin-bottom: 10px;
            font-weight: 600;
        }

        .status-value {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
        }

        .indicator.off {
            background: #dc3545;
        }

        .indicator.on {
            background: #28a745;
            animation: pulse 2s infinite;
        }

        .indicator.loading {
            border: 2px solid #f8f9fa;
            border-top: 2px solid #ffc107;
            border-radius: 50%;
            width: 14px;
            height: 14px;
            animation: spin 1s linear infinite;
        }

        @keyframes pulse {

            0%,
            100% {
                opacity: 1;
            }

            50% {
                opacity: 0.6;
            }
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .button-group {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 12px;
            margin-bottom: 15px;
        }

        button {
            padding: 18px;
            font-size: 16px;
            font-weight: bold;
            border: none;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .btn-start {
            background: linear-gradient(135deg, #2744c6 0%, #764ba2 100%);
            color: white;
        }

        .btn-stop {
            background: linear-gradient(135deg, #f10d0d 0%, #d7394e 100%);
            color: white;
        }

        .btn-open {
            background: linear-gradient(135deg, #09028c 0%, #0ea7af 100%);
            color: white;
            grid-column: 1 / -1;
        }

        .btn-db {
            background: linear-gradient(135deg, #04b03d 0%, #08c19f 100%);
            color: white;
            grid-column: 1 / -1;
        }

        button:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }

        button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .info-box {
            padding: 15px;
            background: #e9ecef;
            border-radius: 10px;
            font-size: 13px;
            text-align: center;
            margin-bottom: 15px;
        }

        .info-box.success {
            background: linear-gradient(135deg, #d4fc79 0%, #96e6a1 100%);
            color: #155724;
        }

        .info-box.error {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            color: #721c24;
        }

        .logs {
            padding: 15px;
            background: #1e1e1e;
            color: #d4d4d4;
            border-radius: 10px;
            font-family: 'Consolas', monospace;
            font-size: 11px;
            max-height: 200px;
            overflow-y: auto;
        }

        .log-entry {
            margin-bottom: 3px;
        }

        .log-time {
            color: #858585;
        }

        .log-success {
            color: #4ec9b0;
        }

        .log-error {
            color: #f48771;
        }

        .log-info {
            color: #9cdcfe;
        }

        .button-group {
            display: flex;
            flex-direction: column;
            gap: 10px;
            /* jarak antar baris */
            width: 100%;
        }

        .button-group .row {
            display: flex;
            gap: 10px;
            /* jarak antar tombol di baris pertama */
            width: 100%;
        }

        .button-group .row:first-child button {
            flex: 1;
            /* bagi rata lebar untuk 3 tombol pertama */
        }

        .button-group .btn-open {
            width: 100%;
            /* tombol OPEN BROWSER memenuhi lebar container */
        }

        /* Styling opsional */
        button {
            padding: 10px;
            font-size: 16px;
            cursor: pointer;
            margin: 5px;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>SPSP Launcher</h1>
        <div class="subtitle">SPSP Application</div>

        <div class="status-grid">
            <div class="status-card" id="phpCard">
                <div class="status-label">PHP Server</div>
                <div class="status-value"><span class="indicator off" id="phpIndicator"></span><span
                        id="phpStatus">Off</span></div>
            </div>
            <div class="status-card" id="viteCard">
                <div class="status-label">Vite Dev</div>
                <div class="status-value"><span class="indicator off" id="viteIndicator"></span><span
                        id="viteStatus">Off</span></div>
            </div>
            <div class="status-card" id="dbCard">
                <div class="status-label">Database</div>
                <div class="status-value"><span class="indicator off" id="dbIndicator"></span><span
                        id="dbStatus">Off</span></div>
            </div>
        </div>

        <div class="button-group">
            <div class="row">
                <button class="btn-start" onclick="startAll()" id="btnStart">START ALL</button>
                <button class="btn-stop" onclick="stopAll()" id="btnStop" disabled>STOP ALL</button>
                <button class="btn-db" onclick="checkDatabase()" id="btnDB">TEST DATABASE</button>
            </div>
            <div class="row">
                <button class="btn-open" onclick="openBrowser()" id="btnOpen" disabled>OPEN BROWSER</button>
            </div>
        </div>


        <div class="info-box" id="infoBox">Klik "START ALL" untuk menjalankan aplikasi</div>

        <div class="logs" id="logs">
            <div class="log-entry log-info"><span class="log-time">[System]</span> Ready...</div>
        </div>
    </div>

    <script type="text/javascript">
        var shell = new ActiveXObject("WScript.Shell");
        var fso = new ActiveXObject("Scripting.FileSystemObject");
        var isRunning = false;

        var LARAVEL_PATH = "C:\\laragon\\www\\spsp_new";
        var APP_URL = "http://127.0.0.1:8000";

        function addLog(message, type) {
            var logs = document.getElementById("logs");
            var time = new Date().toLocaleTimeString('id-ID');
            var logClass = 'log-' + (type || 'info');
            logs.innerHTML += '<div class="log-entry ' + logClass + '"><span class="log-time">[' + time + ']</span> ' + message + '</div>';
            logs.scrollTop = logs.scrollHeight;
        }

        function updateInfo(message, type) {
            var infoBox = document.getElementById("infoBox");
            infoBox.className = "info-box" + (type ? " " + type : "");
            infoBox.innerHTML = message;
        }

        function setStatus(service, status) {
            var indicator = document.getElementById(service + "Indicator");
            var statusText = document.getElementById(service + "Status");
            var card = document.getElementById(service + "Card");
            if (status === "loading") {
                indicator.className = "indicator loading";
                statusText.innerText = "Checking...";
                card.className = "status-card";
                return;
            }
            if (status) {
                indicator.className = "indicator on";
                statusText.innerText = "Running";
                card.className = "status-card active";
            } else {
                indicator.className = "indicator off";
                statusText.innerText = "Off";
                card.className = "status-card";
            }
        }

        // âœ… Cek status MySQL dengan animasi loading
        function checkDatabase() {
            var btn = document.getElementById("btnDB");
            btn.disabled = true;
            setStatus("db", "loading");
            updateInfo("Memeriksa status database...", "");

            setTimeout(function () { // beri jeda agar UI sempat refresh
                try {
                    addLog("Memeriksa status MySQL...", "info");
                    var exec = shell.Exec('cmd /c tasklist /FI "IMAGENAME eq mysqld.exe"');
                    var output = exec.StdOut.ReadAll();

                    if (output.indexOf("mysqld.exe") !== -1) {
                        setStatus("db", true);
                        addLog("Database MySQL aktif.", "success");
                        updateInfo("Database sedang berjalan.", "success");
                    } else {
                        setStatus("db", false);
                        addLog("Database MySQL tidak aktif.", "error");
                        updateInfo("Database belum berjalan (silakan nyalakan lewat Laragon).", "error");
                    }
                } catch (e) {
                    addLog("Error cek database: " + e.message, "error");
                    updateInfo("Error saat memeriksa database.", "error");
                    setStatus("db", false);
                } finally {
                    btn.disabled = false;
                }
            }, 200);
        }

        function startAll() {
            try {
                addLog("=== MEMULAI APLIKASI ===", "info");
                if (!fso.FolderExists(LARAVEL_PATH)) {
                    addLog("ERROR: Folder tidak ditemukan: " + LARAVEL_PATH, "error");
                    updateInfo("Folder Laravel tidak ditemukan! Edit path di file HTA.", "error");
                    return;
                }
                addLog("Path Laravel: " + LARAVEL_PATH, "success");
                updateInfo("Memulai services...", "");
                shell.Run('cmd /c start "PHP Artisan" cmd /k "cd /d ' + LARAVEL_PATH + ' && php artisan serve"', 1);
                setTimeout(function () {
                    setStatus("php", true);
                    addLog("PHP Server running at " + APP_URL, "success");
                }, 3000);
                setTimeout(function () {
                    shell.Run('cmd /c start "Vite Dev" cmd /k "cd /d ' + LARAVEL_PATH + ' && npm run dev"', 1);
                    setTimeout(function () {
                        setStatus("vite", true);
                        addLog("Vite Dev Server running", "success");
                        isRunning = true;
                        updateUI();
                        updateInfo("Aplikasi berjalan! Klik OPEN BROWSER", "success");
                        setTimeout(openBrowser, 2000);
                    }, 3000);
                }, 3000);
            } catch (e) {
                addLog("FATAL ERROR: " + e.message, "error");
                updateInfo("Error: " + e.message, "error");
            }
        }

        function stopAll() {
            try {
                addLog("=== MENGHENTIKAN APLIKASI ===", "info");
                updateInfo("Menghentikan services...", "");

                // Hentikan proses PHP & Node
                addLog("Stopping PHP...", "info");
                shell.Run("taskkill /F /IM php.exe /T", 0, false);

                addLog("Stopping Node...", "info");
                shell.Run("taskkill /F /IM node.exe /T", 0, false);

                // Tutup terminal yang terbuka (cmd window dengan title kita)
                addLog("Closing opened terminal windows...", "info");
                shell.Run('taskkill /FI "WINDOWTITLE eq PHP Artisan*" /F', 0, false);
                shell.Run('taskkill /FI "WINDOWTITLE eq Vite Dev*" /F', 0, false);

                // Reset status UI
                setStatus("php", false);
                setStatus("vite", false);
                isRunning = false;
                updateUI();
                addLog("Semua service dihentikan dan terminal ditutup", "success");
                updateInfo("Service dihentikan. Klik START ALL untuk menjalankan lagi.", "");
            } catch (e) {
                addLog("Error: " + e.message, "error");
            }
        }


        function openBrowser() {
            try {
                shell.Run(APP_URL);
                addLog("Browser opened: " + APP_URL, "info");
            } catch (e) {
                addLog("Error opening browser: " + e.message, "error");
            }
        }

        function updateUI() {
            document.getElementById("btnStart").disabled = isRunning;
            document.getElementById("btnStop").disabled = !isRunning;
            document.getElementById("btnOpen").disabled = !isRunning;
        }

        window.onbeforeunload = function () {
            if (isRunning && confirm("Service masih berjalan!\n\nHentikan semua service?")) {
                stopAll();
            }
        }

        addLog("Path Laravel: " + LARAVEL_PATH, "info");
        addLog("App URL: " + APP_URL, "info");
        if (fso.FolderExists(LARAVEL_PATH)) {
            addLog("Folder Laravel ditemukan!", "success");
        } else {
            addLog("WARNING: Folder Laravel tidak ditemukan", "error");
        }

        window.resizeTo(650, 810);
        window.moveTo((screen.availWidth - 650) / 2, (screen.availHeight - 700) / 2); // supaya center

    </script>
</body>

</html>